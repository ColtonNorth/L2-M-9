import os
import time
import requests
import json
import http.client
import urllib.request

#turn buzzer on
def buzzerOn():
    os.system("aplay alarm.wav&") #play the buzzer's sound
    time.sleep(5) #wait 5 seconds
    buzzerOff()
  
#turn buzzer off
def buzzerOff():
    os.system("pkill -9 aplay") #stop the buzzer's sound
  
#read data from thingspeak to determine whether buzzer should be set to on or off
def read_data_thingspeak_buzzer():
    URL = 'https://api.thingspeak.com/channels/1152316/fields/1.json?api_key=MHR94BNTWZFHQGBT&results1'
    KEY = 'MHR94BNTWZFHQGBT'  #read key
    HEADER = '&results1'
    NEW_URL = URL+KEY+HEADER
  
    get_data = requests.get(NEW_URL).json()
  
    for x in get_data['feeds']:
        turnOnBuzzer = x['field1']  #access field 1
    return int(turnOnBuzzer) #return turnOnBuzzer as an integer
  
#set alertBuzzer from server back to 0
def write_data_thingspeak_alertBuzzer(value):
    alertBuzzer = value
    key = "P2ALDMI1Y8H2Y4JP"
    params = urllib.parse.urlencode({'field1': alertBuzzer,'key':key })
    headers = {"Content-typZZe": "application/x-www-form-urlencoded","Accept": "text/plain"}
    conn = http.client.HTTPConnection("api.thingspeak.com:80")
    try:
            conn.request("POST", "/update", params, headers)
            response = conn.getresponse()
            data = response.read()
            conn.close()
    except:
            print ("connection closed")


if __name__ == '__main__':
    while True:     #if turnOnBuzzer is set to 1, buzzer will turn on for 5 seconds. Check turnOnBuzzer every 15 seconds
        if read_data_thingspeak_buzzer() == 1:
            write_data_thingspeak_alertBuzzer(0)
            print ('Buzzer ON: Air quality is not safe!')
            buzzerOn()
        else:
            print ('Buzzer OFF')
        time.sleep(15)
        break
